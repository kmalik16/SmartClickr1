{
  "name": "express-alias",
  "description": "Adds a convenience app.alias() method to Express.",
  "version": "0.1.0",
  "author": {
    "name": "Aseem Kishore",
    "email": "aseem.kishore@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {},
  "engines": {
    "node": "*"
  },
  "scripts": {},
  "homepage": "https://github.com/aseemk/express-alias",
  "repository": {
    "type": "git",
    "url": "git://github.com/aseemk/express-alias.git"
  },
  "readme": "# Express-Alias\n\nAdds a convenience `app.alias()` method to Express for aliasing redirect\nroutes. The redirects are HTTP 301 by default, but this is customizable.\n\n## Example\n\n```js\napp.alias('/privacy', '/privacy-policy');\napp.alias('/terms', '/terms-of-service');\n\napp.alias('/aseem', '/aseemk', 302);    // temporary redirect\n```\n\n## Installation\n\n```\nnpm install express-alias\n```\n\n## Usage\n\nYou can either `require()` Express normally and then extend it:\n\n```js\nvar express = require('express');\nrequire('express-alias');\n```\n\nOr just `require()` this module, which returns the extended Express for\nconvenience:\n\n```js\nvar express = require('express-alias');\n```\n\n## TODO\n\nThis only patches HTTP servers; patch HTTPS ones too. Is there a way to do\nthat in a generic way?\n\nInvestigate support for Express 3 / Connect 2.\n\nSupport route parameters (e.g. `'/user/:id'` &rarr; `'/users/:id'`).\n\n## License\n\nMIT. &copy; 2012 Aseem Kishore.\n\n## Credits\n\n[TJ Holowaychuk](https://github.com/visionmedia) for the awesome Express.\n",
  "readmeFilename": "README.md",
  "_id": "express-alias@0.1.0",
  "_from": "express-alias@"
}
